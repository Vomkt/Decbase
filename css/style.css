*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body, html {
    font-family: 'Open Sans';
    font-weight: 400;
    line-height: 1.66;
}

.section {
    padding-top: 60px;
    padding-bottom: 60px;
}

/* Add styles for all fonts */


h1{
    font-family: 'Poppins';
    /* Do not use it because it's normal by default font-style: normal;  - https://developer.mozilla.org/en-US/docs/Web/CSS/font-style */
    font-weight: 600;
    font-size: 72px;
    /*
    Line height should not be in PX, only EM
    78px font size
    72px line height

    = 78 / 72 = 1.08em

    line-height: 78px; - EUG
    */
    line-height: 1.08; /* Vitalii changed */
    color: #212121;
    margin-bottom: 23px;
}

h2{
    font-family: 'Poppins';
    font-weight: 500;
    font-size: 48px;
    line-height: 1.08; /* designer durak */
    color: #212121;
    margin-bottom: 20px;
}

h5{
    
    /* We do not use width and height for typography
    width: 180px;
    height: 78px; */
    font-family: 'Open Sans';
    font-weight: 700;
    font-size: 24px;
    color: #212121;
    margin-bottom: 5px;
}

h6{
    /* font-family: 'Poppins';  Removed, as by design it's open sans, so we can remove it if we have open sans for body*/
    font-weight: 600;
    font-size: 20px;
    line-height: 27px; /* Line height should be in em, not px */
    color: #646464;
    margin-bottom: 5px;
}

p {
    font-size: 18px;
    color: #646464;
}

span{
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 700;
    font-size: 18px;
    line-height: 78px;
    color: #FFFFFF;
}

.container{
    margin: 0 auto;
    width: 1346px;
}

/* MENU */

.main-menu > ul > li{
    display: inline-block; /*Це значення створює блоковий елемент, який поводить себе подібно рядковому елементу.   */
}

header {
    padding-top: 34px;
    padding-bottom: 34px;
}

header .container{
    display: flex;
    align-items: center; /*Елементи розташовані по центру контейнера.*/
    justify-content: space-between; /*Флекси рівномірно розподіляються по всьому рядку. Перший і останній флекс притискаються до відповідних країв контейнера.*/
}

.main-menu > ul > li {
    margin-right: 33px; 
}

.main-menu > ul > li:last-child {
    margin-right: 0;
}

.main-menu > ul > li > a{
    font-style: normal;
    font-weight: 600;
    font-size: 16px;
    line-height: 22px;
    letter-spacing: 1px;
    color: #646464;
    /* margin-right: 33px ;   Remove from here and move to LI */
    text-decoration: none;
}

.btn{
    padding: 10px 20px 10px 20px;
    background: #CAA892;
    border-radius: 15px 0px;
    
}

.btn-color{
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 600;
    font-size: 16px;
    line-height: 22px;
    color: #FFFFFF;
}

/* HERO */

.hero {
    position: relative; /*Положення елемента встановлюється відносно його поточного положення*/
}

.hero__inner{
    display: flex;
    flex-wrap: wrap; /*Гнучкі елементи шикуються в кілька рядків, їх напрямок задається властивістю flex-direction.*/
    align-items: center; /*Елементи розташовані по центру контейнера.*/
    margin-left: -22px; /*чому від'ємне значення?*/
    margin-right: -22px;
}

.hero__left-block{
    width: 50%;
    padding-right: 22px;
    padding-left: 22px;
}

.hero__left-block .button {
    margin-top: 46px;
}

.hero__img-wrapper {
    width: 50%;
    padding-right: 22px;
    padding-left: 22px;
}

.hero__img-inner {
    position: relative; /* need this for after element*/
}
/*
Селектор ::after додає що-небудь після контенту вказаного елемента(-ів).
Використовуйте властивість content для визначення власного контенту, що буде додано.
Порада:	
Щоб додати що-небуть в кінці змісту елемента, використовуйте селектор ::before.
*/

.hero__img-inner::after {
    content: "";
    position: absolute; /*Видаляє елемент з загального потоку. (місце, що звільнив елемент заповнюється іншими елементами) і вставляється відносно свого батьківського, не статично позиційованого елемента, якщо такого елемента немає, то їм вважається вікно браузера (При цьому ширина елемента, без задання, встановлюється за його вмістом). Нове місце розраховується за допомогою властивостей*/
    left: 33px;
    top: 33px;
    width: 100%;
    height: 100%;
    border-radius: 140px 0 140px 0;
    border: 2px solid #B0855B;
    z-index: -1; /*Властивість z-index визначає порядок стека елемента. Іншими словами, Ви можете розмістити елемент на сторінці вище іншого елементу або перед ним.*/
}

.hero__img {
    max-width: 100%;
    margin: auto; /*Браузер самостійно обчислить відступ.*/
    border: 6px;
    border-radius: 140px 0 140px 0;
    display: block; /*Елемент показується як блоковий. Вказавши це значення для елемента <span> - він почне вести себе як блоковий, тобто, його вміст буде завжди починатися з нового рядка.*/
    height: 100%;
}

.hero__decoration {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 212px;
}

.hero__decoration svg {
    max-width: 100%;
}

.button {
    display: inline-block;
    background: #37806B;
    border-radius: 20px 0px;
    line-height: 1;
    padding: 12px 35px;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
}

/* SERVICES */

.services-section1{
    font-family: 'Poppins';
}

.services-section2{
    font-family: 'Poppins';
    font-style: normal;
    font-weight: 500;
    font-size: 48px;
    line-height: 78px;
    color: #212121;
}

.services__block-item{
    display: flex;
    justify-content: center; /*Елементи розташовані в центрі контейнера.*/
    margin-left: -18px;
    margin-right: -18px;
    margin-top: 50px;
}

.services__item {   
    padding-left: 18px;
    padding-right: 18px;
    width: calc(100% / 3); /*calc() - это функция CSS, которая даёт возможность рассчитать значения свойств CSS во время их определения.*/
}

.services__item:hover .services__item-inner {
    background: #CAA892;
    color: white;
}

.services__item:hover .services__item-inner * {
    color: white;
}

.services__item-inner {
    display: flex; /*Елемент поводиться як блоковий і викладає вміст згідно флекс-моделі*/
    padding: 30px;
    padding-right: 21px;
    height: 100%;
    background: #FFFFFF;
    box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.14);
    border-radius: 60px 0px; 

    transition: .3s; /*CSS властивість transition встановлює ефект переходу між двома станами елемента. Використовується з псевдокласом :hover або :active або якщо стан елементу був динамічно змінений за допомогою JavaScript.*/
}

.box-icon{
    /* float: left; forget about this forever*/
    margin-right: 20px;
}

.hero__decoration2 {
    position: absolute;
    right: 0;
    bottom: 0;
    width: 212px;
}

/* SECTION INTERIORIS */

.interioris{
    padding-top: 236px;
}

.interioris__inner{
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin-left: -22px;
    margin-right: -22px;
}

.interioris__left-block{
    width: 50%;
    padding-right: 22px;
    padding-left: 22px;
    max-width: 544px;
    margin-left: auto;
}

.interioris__left-block .button {
    margin-top: 46px;
}

.interioris__img-wrapper {
    width: 50%;
    padding-right: 22px;
    padding-left: 22px;
    text-align: right;
}

.interioris__img-inner {
    position: relative; /* need this for after element*/
}

.interioris__img-inner::after {
    content: "";
    position: absolute;
    left: -33px;
    top: -33px;
    width: 100%;
    height: 100%;
    border-radius: 140px 0 140px 0;
    border: 2px solid #B0855B;
    z-index: -1;
}

.interioris__img {
    max-width: 100%;
    margin: auto;
    border: 6px;
    border-radius: 140px 0 140px 0;
    display: block;
    height: 100%;
}

.button {
    display: inline-block;
    background: #37806B;
    border-radius: 20px 0px;
    line-height: 1;
    padding: 12px 35px;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
}

/* SECTION WORKING */

.working{
    padding-bottom: 205px;
}

.working__inner{
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin-left: -22px;
    margin-right: -22px;
}

.working__left-block{
    width: 50%;
    padding-right: 22px;
    padding-left: 22px;
}

.working__left-block .button {
    margin-top: 46px;
}

.working__img-wrapper {
    /* width: 50%; */
    /* padding-right: 22px;
    padding-left: 22px; */
    /* text-align: right; */
}

.working__img-inner {
    position: relative; /* need this for after element*/
}

.working__img-inner::after {
    content: "";
    position: absolute;
    left: 33px;
    top: 33px;
    width: 100%;
    height: 100%;
    border-radius: 140px 0 140px 0;
    border: 2px solid #B0855B;
    z-index: -1;
}

.working__img {
    max-width: 100%;
    margin: auto;
    border: 6px;
    border-radius: 140px 0 140px 0;
    display: block;
    height: 100%;
}

.button {
    display: inline-block;
    background: #37806B;
    border-radius: 20px 0px;
    line-height: 1;
    padding: 12px 35px;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
}

.demo-text {
    font-size: 16rem;
    line-height: 1;
    font-weight: 700;
    -webkit-background-clip: text;
	background-clip: text;
	background-image: url('../img/bg-pic.png');
	color: transparent;
    background-size: contain;
}

/* my drafts */

/* COMPLETED WORK */

.completed-work{
    background-color: #F8F8F8;
    padding-top: 87px;
}

.completed-work__inner {
    text-align: center;    
}

.work {
    display: flex;    
    justify-content: space-between;
    
}

.work-project {
    width: 185px;
    height: 182px;
    margin-top: 100px;
    padding: 18px 18px 18px 18px;
    /* width: calc(100% / 4); */
    background: #FFFFFF;
    box-shadow: 0px 13px 16px rgba(0, 0, 0, 0.1);
    border-radius: 40px 0px;
    justify-content: center;
    display: flex;
    align-items: center;
}

.work-project_down {
    margin-top: 200px;
    width: 185px;
    height: 182px;
    padding: 18px 18px 18px 18px;
    /* width: calc(100% / 4); */
    background: #FFFFFF;
    box-shadow: 0px 13px 16px rgba(0, 0, 0, 0.1);
    border-radius: 40px 0px;
    justify-content: center;
    display: flex;
    align-items: center;

}

h3 {
    font-weight: 700;
    font-size: 50px;
}

.work-decoration {

}

/* TESTIMONIALS */


.testimonials__inner {
    text-align: center;
}

.testimonials__block-item{
    display: flex;
    justify-content: center;
    margin-left: -18px;
    margin-right: -18px;
    margin-top: 50px;
}

.testimonials__item {   
    padding-left: 18px;
    width: calc(100% / 2);
    margin: auto;
}

.testimonials__item-inner {
    display: flex;
    padding: 30px;
    padding-right: 21px;
    height: 100%;
    background: #FFFFFF;
    box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.14);
    border-radius: 60px 0px; 
    
}

.test-icon {
    max-width: 100%;
    margin: auto;
    border: 6px;
    border-radius: 20px 0 20px 0;
    display: block;
    height: 100%;
    margin-right: 100px;
    
}

.test-span {
    font-family: 'Open Sans';
    font-style: normal;
    font-weight: 400;
    font-size: 18px;
    line-height: 28px;
    color: #646464;
}

/* BLOG */

.blog {
    display: flex;
    justify-content: center;
    background-color: #F8F8F8;
    margin-top: 82px;
}

.blog__inner {
    text-align: center;
}

.blog__img-wrapper {
    width: 100%;
    padding-right: 105px;
    padding-left: 0px;
    text-align: right;
}

.blog__img-inner {
    position: relative; /* need this for after element*/
}

.blog__img-inner::after {
    content: "";
    position: absolute;
    left: 33px;
    top: 33px;
    width: 100%;
    height: 100%;
    border-radius: 140px 0 140px 0;
    border: 2px solid #B0855B;
    z-index: -1;
}

.blog__img {
    max-width: 100%;
    margin: auto;
    border: 6px;
    border-radius: 140px 0 140px 0;
    display: block;
    height: 100%;

}

.button {
    display: inline-block;
    background: #37806B;
    border-radius: 20px 0px;
    line-height: 1;
    padding: 12px 35px;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    margin-top: 59px;
}

.blog-h2 {
    font-weight: 600;
    font-size: 30px;
    line-height: 28px;
    margin-top: 43px;
}

/* EMAIL */


.email__inner {
    text-align: center;
}

.email-form {
    text-align: center;    
}

.input {
    background: #EEEEEE;
    width:600px;
    height: 40px;
}